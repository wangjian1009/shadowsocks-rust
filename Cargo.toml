[package]
name = "shadowsocks-rust"
version = "1.15.1"
authors = ["Shadowsocks Contributors"]
description = "shadowsocks is a fast tunnel proxy that helps you bypass firewalls."
repository = "https://github.com/shadowsocks/shadowsocks-rust"
readme = "README.md"
documentation = "https://docs.rs/shadowsocks-rust"
keywords = ["shadowsocks", "proxy", "socks", "socks5", "firewall"]
license = "MIT"
edition = "2021"
rust-version = "1.64"

[badges]
maintenance = { status = "passively-maintained" }

[lib]
path = "src/lib.rs"
crate-type = ["staticlib", "lib"]

[[bin]]
name = "sslocal"
path = "bin/sslocal.rs"
required-features = ["local"]

[[bin]]
name = "ssserver"
path = "bin/ssserver.rs"
required-features = ["server"]

[[bin]]
name = "ssurl"
path = "bin/ssurl.rs"
required-features = ["utility"]

[[bin]]
name = "ssmanager"
path = "bin/ssmanager.rs"
required-features = ["manager"]

[[bin]]
name = "ssservice"
path = "bin/ssservice.rs"
required-features = ["service"]

[[bin]]
name = "sscheck"
path = "bin/sscheck.rs"
required-features = ["local"]

[workspace]
members = [
    "crates/shadowsocks",
    "crates/shadowsocks-service",
    "depends/tracing-oslog",
]

[profile.release]
lto = "fat"
codegen-units = 1
incremental = false
panic = "abort"
strip = true

[features]
default = [
    "logging",
    "logging-console",
    "logging-oslog",
    "logging-file",
    "logging-apm",
    "logging-jaeger",
    "statistics-prometheus",
    "trust-dns",
    "stream-cipher",
    "local",
    "local-maintain",
    "local-url",
    "server",
    "server-maintain",
    "server-limit",
    "server-mock",
    "manager",
    "utility",
    "service",
    "local-http",
    "local-tunnel",
    "local-socks4",
    "local-redir",
    "local-signed-info",
    "local-fake-mode",
    "local-android-protect",
    "multi-threaded",
    "rate-limit",
    "lib-entry",
    "host-dns",
    "env-crypt",
    "sniffer-bittorrent",
    "transport-ws",
    "transport-tls",
    "transport-mkcp",
    "transport-skcp",
    "trojan",
    "vless",
    "tuic",
    "aead-cipher-2022",
]

# Enable local server
local = ["shadowsocks-service/local"]
local-url = ["local", "hyper", "url"]
local-maintain = ["shadowsocks-service/local-maintain"]
local-signed-info = ["shadowsocks-service/local-signed-info"]
local-fake-mode = ["shadowsocks-service/local-fake-mode"]
local-android-protect = ["shadowsocks-service/local-android-protect"]

# Enable env-crypt
env-crypt = ["shadowsocks-service/env-crypt"]

# Enable bittorrent protocol reject
sniffer-bittorrent = ["shadowsocks-service/sniffer-bittorrent"]

transport = []
transport-ws = ["shadowsocks-service/transport-ws", "transport"]
transport-tls = ["shadowsocks-service/transport-tls", "transport"]
transport-mkcp = ["shadowsocks-service/transport-mkcp", "transport"]
transport-skcp = ["shadowsocks-service/transport-skcp", "transport"]

trojan = ["shadowsocks-service/trojan"]
vless = ["shadowsocks-service/vless"]
tuic = ["shadowsocks-service/tuic"]

# Enable remote server
server = ["shadowsocks-service/server"]
server-maintain = ["shadowsocks-service/server-maintain"]
server-limit = ["shadowsocks-service/server-limit"]
server-mock = ["shadowsocks-service/server-mock"]
# Enable manager server
manager = ["shadowsocks-service/manager"]
# Enable utility
utility = ["qrcode"]
# Enable service
service = ["local", "server", "manager"]

# Enable use ss as lib
lib-entry = ["spin", "serde_json"]

# Enables trust-dns for replacing tokio's builtin DNS resolver
trust-dns = ["shadowsocks-service/trust-dns"]
dns-over-tls = ["shadowsocks-service/dns-over-tls"]
dns-over-https = ["shadowsocks-service/dns-over-https"]

# Enable logging output
logging = ["tracing-futures", "tracing-subscriber"]
logging-console = ["logging"]
logging-oslog = ["logging", "tracing-oslog"]
logging-file = ["logging", "tracing-appender"]
logging-apm = ["logging", "url", "tracing-elastic-apm", "sysinfo"]
logging-jaeger = ["logging", "url", "tracing-opentelemetry", "opentelemetry", "opentelemetry-jaeger"]

# Enable metrics
statistics=["metrics", "shadowsocks-service/statistics"]
statistics-prometheus = ["statistics", "metrics-util", "metrics-exporter-prometheus"]

# Enable DNS-relay
local-dns = ["local", "shadowsocks-service/local-dns"]
# Enable client flow statistic report
# Currently is only used in Android
local-flow-stat = ["local", "shadowsocks-service/local-flow-stat"]
# Enable HTTP protocol for sslocal
local-http = ["local", "shadowsocks-service/local-http"]
local-http-native-tls = ["local-http", "shadowsocks-service/local-http-native-tls"]
local-http-rustls = ["local-http", "shadowsocks-service/local-http-rustls"]
# Enable REDIR protocol for sslocal
# (transparent proxy)
local-redir = ["local", "shadowsocks-service/local-redir"]
# Enable tunnel protocol for sslocal
local-tunnel = ["local", "shadowsocks-service/local-tunnel"]
# Enable socks4 protocol for sslocal
local-socks4 = ["local", "shadowsocks-service/local-socks4"]
# Enable Tun interface protocol for sslocal
local-tun = ["local", "shadowsocks-service/local-tun", "ipnet"]

# Enable jemalloc for binaries
jemalloc = ["jemallocator"]
# Enable bundled tcmalloc
tcmalloc-vendored = ["tcmalloc/bundled"]

# Enable snmalloc for binaries
snmalloc = ["snmalloc-rs"]

# Enable tokio's multi-threaded runtime
multi-threaded = ["tokio/rt-multi-thread"]

# Enable Stream Cipher Protocol
# WARN: Stream Cipher Protocol is proved to be insecure
# https://github.com/shadowsocks/shadowsocks-rust/issues/373
# Users should always avoid using these ciphers in practice
stream-cipher = ["shadowsocks-service/stream-cipher"]

# Enable extra AEAD ciphers
# WARN: These non-standard AEAD ciphers are not officially supported by shadowsocks community
aead-cipher-extra = ["shadowsocks-service/aead-cipher-extra"]

# Enable host dns
host-dns = ["trust-dns-resolver", "local-dns"]

# Enable AEAD 2022
aead-cipher-2022 = ["shadowsocks-service/aead-cipher-2022"]
# Enable AEAD 2022 with extra ciphers
aead-cipher-2022-extra = ["shadowsocks-service/aead-cipher-2022-extra"]

# Enable rate limit
rate-limit = ["shadowsocks-service/rate-limit", "governor", "hyper", "tower"]

# Enable detection against replay attack (Stream / AEAD)
security-replay-attack-detect = ["shadowsocks-service/security-replay-attack-detect"]
replay-attack-detect = ["security-replay-attack-detect"] # Backward compatibility. DO NOT USE.

[dependencies]
serde = { version = "1.0", features = ["derive"] }
json5 = "0.4"
thiserror = "1.0"
base64 = "0.13"

tracing = { version = "0.1.35" }
tracing-futures = { version = "0.2", features = ["std-future"], optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "time", "local-time", "ansi", "json"], default-features = false, optional = true }

# logging-file
tracing-appender = { version = "0.2", optional = true }

# logging-os
tracing-oslog = { version = "0.1.2", optional = true }

# logging-jaeger
tracing-opentelemetry = { version = "*", optional = true }
opentelemetry = { version = "*", features = ["rt-tokio"], optional = true }
opentelemetry-jaeger = { version = "*", features = ["rt-tokio", "hyper_collector_client"], optional = true }

# logging-apm
tracing-elastic-apm = { version = "3.2.3", optional = true, features = ["rustls-tls"], default-features = false }
url = { version = "*", optional = true }
sysinfo = { version = "*", optional = true }

#metrics
metrics = { version = "0.20", optional = true }
metrics-util = { version = "^0.14", optional = true }
metrics-exporter-prometheus = { version = "0.11", optional = true }

clap = { version = "4.0", features = ["wrap_help", "suggestions"] }
cfg-if = "1"
qrcode = { version = "0.12", default-features = false, optional = true }
sysexits = "0.3"
exitcode = "1"
bytes = "1.0"
byteorder = "1.3"

trust-dns-resolver = { version = "0.22", optional = true, features = ["serde-config"] }
build-time = "0.1"
directories = "4.0"
xdg = "2.4"
rpassword = "7.0"
spin = { version = "0.9", features = ["std"], optional = true }
libc = { version = "0.2", features = ["extra_traits"] }
rand = "0.8"

futures = "0.3"
tokio = { version = "*", features = ["rt", "signal", "io-std", "fs"] }
num_cpus = "1.13"

governor = { version = "0.3.2", optional = true }

ipnet = { version = "2.7", optional = true }

mimalloc = { version = "0.1", default-features = false, optional = true }
tcmalloc = { version = "0.3", optional = true }
jemallocator = { version = "0.5", optional = true }
snmalloc-rs = { version = "0.3", optional = true }
rpmalloc = { version = "0.2", optional = true }

serde_json = { version = "1.0", optional = true }

hyper = { version = "*", optional = true}
tower = { version = "*", optional = true }

shadowsocks-service = { version = "1.15.0", path = "./crates/shadowsocks-service", default-features = false }

[target.'cfg(unix)'.dependencies]
daemonize = "0.4"

[dev-dependencies]
byteorder = "1.3"
tracing-test = "*"
byte_string = "1.0"
tokio = { version = "1", features = ["net", "time", "macros", "io-util"] }
tokio-test = "*"

[patch.crates-io]
quinn = { path = "depends/quinn/quinn" }
tracing-oslog = { path = "depends/tracing-oslog" }
