[package]
name = "shadowsocks-service"
version = "1.17.2"
authors = ["Shadowsocks Contributors"]
description = "shadowsocks is a fast tunnel proxy that helps you bypass firewalls."
repository = "https://github.com/shadowsocks/shadowsocks-rust"
readme = "README.md"
documentation = "https://docs.rs/shadowsocks-service"
keywords = ["shadowsocks", "proxy", "socks", "socks5", "firewall"]
license = "MIT"
edition = "2021"

[badges]
maintenance = { status = "passively-maintained" }

[features]
default = [
    "local",
    "server",
    "manager",
    "stream-cipher",
    "local-flow-stat",
    "trust-dns",
    "local-dns",
    "local-http-rustls",
    "local-redir",
    "local-tunnel",
    "local-tun",
    "local-socks4",
    "local-maintain",
    "local-signed-info",
    "local-fake-mode",
    "local-android-protect",
    "local-api",
    "server-maintain",
    "server-limit",
    "server-mock",
    "rate-limit",
    "env-crypt",
    "statistics",
    "sniffer-bittorrent",
    "sniffer-http",
    "sniffer-tls",
    "transport-ws",
    "transport-tls",
    # "transport-restls",
    "trojan",
    "vless",
    "tuic",
    "wireguard",
]

full = [
    "local",
    "server",
    "manager",
    "hickory-dns",
    "local-http",
    "local-dns",
    "local-redir",
    "local-tunnel",
    "local-tun",
    "local-socks4",
    "local-maintain",
    "server-maintain",
    "server-limit",
    "server-mock",
    "rate-limit",
    "statistics",
    "sniffer-bittorrent",
    "sniffer-http",
    "sniffer-tls",
    "transport-ws",
    "transport-tls",
    "transport-mkcp",
    "transport-skcp",
    "transport-restls",
    "trojan",
    "vless",
    "tuic",
    "wireguard",
]

# Enable local server
local = []
local-maintain = ["hyper", "http-body-util", "hyper-util"]
local-signed-info = ["cryptographic-message-syntax", "x509-certificate", "zip"]
local-fake-mode = []
local-android-protect = []
local-api = ["hyper", "http-body-util", "hyper-util"]

# Enable remote server
server = []
server-maintain = ["hyper", "http-body-util", "hyper-util", "csv"]
server-limit = []
server-mock = ["trust-dns-resolver"]

# Enable manager server
manager = ["server"]

# Enable Rate limit
rate-limit = ["shadowsocks/rate-limit", "nonzero_ext"]

# Enable Sniffer
sniffer = []
sniffer-bittorrent = ["sniffer"]
sniffer-http = ["sniffer"]
sniffer-tls = ["sniffer"]

# env-crypt
env-crypt = ["aes", "block-modes"]

# statistics
statistics = ["metrics", "shadowsocks/statistics"]

# enable transport
transport = []
transport-ws = ["transport", "shadowsocks/transport-ws"]
transport-tls = ["transport", "shadowsocks/transport-tls"]
transport-mkcp = ["transport", "shadowsocks/transport-mkcp"]
transport-skcp = ["transport", "shadowsocks/transport-skcp"]
transport-restls = ["transport", "shadowsocks/transport-restls"]

# enable protocol
trojan = ["shadowsocks/trojan"]
vless = ["shadowsocks/vless"]
tuic = ["shadowsocks/tuic"]
wireguard = ["shadowsocks/wireguard", "tun"]

# Enables Hickory-DNS for replacing tokio's builtin DNS resolver
hickory-dns = ["hickory-resolver", "shadowsocks/trust-dns"]
# Hickory-DNS was renamed from Trust-DNS, keep compatibility.
trust-dns = ["hickory-dns"]
dns-over-tls = [
    "hickory-dns",
    "hickory-resolver/dns-over-tls",
    "hickory-resolver/dns-over-rustls",
    "hickory-resolver/webpki-roots",
    "hickory-resolver/native-certs",
]
dns-over-native-tls = [
    "hickory-dns",
    "hickory-resolver/dns-over-tls",
    "hickory-resolver/dns-over-native-tls",
]
dns-over-native-tls-vendored = [
    "hickory-dns",
    "hickory-resolver/dns-over-tls",
    "hickory-resolver/dns-over-native-tls",
    "native-tls/vendored",
]
dns-over-https = [
    "hickory-dns",
    "hickory-resolver/dns-over-https",
    "hickory-resolver/dns-over-https-rustls",
    "hickory-resolver/webpki-roots",
    "hickory-resolver/native-certs",
]
dns-over-h3 = ["hickory-dns", "hickory-resolver/dns-over-h3"]

# Enable DNS-relay
local-dns = ["local", "hickory-dns"]
# Backward compatibility, DO NOT USE
local-dns-relay = ["local-dns"]
# Enable client flow statistic report
# Currently is only used in Android
local-flow-stat = ["local", "shadowsocks/flow-stat"]
# Enable HTTP protocol for sslocal
local-http = ["local", "hyper", "http-body-util"]
local-http-native-tls = ["local-http", "tokio-native-tls", "native-tls"]
local-http-native-tls-vendored = [
    "local-http-native-tls",
    "tokio-native-tls/vendored",
    "native-tls/vendored",
]
local-http-rustls = [
    "local-http",
    "tokio-rustls",
    "webpki-roots",
    "rustls-native-certs",
]
# Enable REDIR protocol for sslocal
# (transparent proxy)
local-redir = ["local"]
# Enable tunnel protocol for sslocal
local-tunnel = ["local"]
# Enable socks4 protocol for sslocal
local-socks4 = ["local"]
# Enable Tun interface protocol for sslocal
local-tun = ["local", "etherparse", "tun", "smoltcp"]

# Enable Stream Cipher Protocol
# WARN: Stream Cipher Protocol is proved to be insecure
# https://github.com/shadowsocks/shadowsocks-rust/issues/373
# Users should always avoid using these ciphers in practice
stream-cipher = ["shadowsocks/stream-cipher"]

# Enable extra AEAD ciphers
# WARN: These non-standard AEAD ciphers are not officially supported by shadowsocks community
aead-cipher-extra = ["shadowsocks/aead-cipher-extra"]

# Enable AEAD 2022
aead-cipher-2022 = ["shadowsocks/aead-cipher-2022"]
# Enable AEAD 2022 with extra ciphers
aead-cipher-2022-extra = ["shadowsocks/aead-cipher-2022-extra"]

# Enable detection against replay attack
security-replay-attack-detect = ["shadowsocks/security-replay-attack-detect"]

[dependencies]
tracing = "0.1.35"
metrics = { version = "0.20", optional = true }

cfg-if = "1"
pin-project = "1.1"
once_cell = "1.17"
thiserror = "1.0"
arc-swap = "1.6"

serde_json = "1.0"

spin = { version = "0.9", features = ["std"] }
lru_time_cache = "0.11"
bytes = "1.5"
byte_string = "1.0"
byteorder = "1.5"
rand = { version = "0.8", features = ["small_rng"] }
csv = { version = "1.1", optional = true }

futures = "0.3"
futures-util = { version = "0.3", default-features = false }
tokio = { version = "1.5", features = ["io-util", "macros", "net", "parking_lot", "rt", "sync", "time", "tracing"] }
tokio-native-tls = { version = "0.3", optional = true }
native-tls = { version = "0.2.8", optional = true, features = ["alpn"] }
tokio-rustls = { version = "0.25", optional = true }
webpki-roots = { version = "0.26", optional = true }
rustls-native-certs = { version = "0.7", optional = true }
async-trait = "0.1"

socket2 = { version = "0.5", features = ["all"] }
libc = "0.2.141"

hyper = { version = "1.1", optional = true, features = ["full"] }
http-body-util = { version = "0.1", optional = true }
hyper-util = { version = "0.1", features = ["full"], optional = true }

cryptographic-message-syntax = { version = "0.17.0", optional = true  }
x509-certificate = { version = "0.14.0", optional = true  }
zip = { version = "0.6.2", optional = true }
hickory-resolver = { version = "0.24", optional = true, features = [
    "serde-config",
] }

trust-dns-resolver = { version = "0.23.0-alpha", optional = true, features = ["serde-config"] }

idna = "0.5"
ipnet = "2.9"
iprange = "0.6"
regex = "1.4"

tun = { version = "0.6", optional = true, features = ["async"] }
etherparse = { version = "0.13", optional = true }
smoltcp = { version = "0.11", optional = true, default-features = false, features = [
    "std",
    "log",
    "medium-ip",
    "proto-ipv4",
    "proto-ipv6",
    "socket-icmp",
    "socket-udp",
    "socket-tcp",
] }

serde = { version = "1.0", features = ["derive"] }
json5 = "0.4"
base64 = "0.21"

aes = { version = "0.7", optional = true }
block-modes = { version = "0.8", optional = true }

nonzero_ext = { version = "0.2", optional = true }
futures-timer = { version = "3.0.2", optional = true }
quanta = { version = "0.4.1", optional = true }
lazy_static = { version = "1", optional = true }

shadowsocks = { version = "1.17.2", path = "../shadowsocks", default-features = false }

# Just for the ioctl call macro
[target.'cfg(any(target_os = "macos", target_os = "ios", target_os = "freebsd", target_os = "netbsd", target_os = "openbsd"))'.dependencies]
nix = { version = "0.27", features = ["ioctl"] }

[target.'cfg(target_os = "android")'.dependencies]
dlopen = "0.1.8"

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.52", features = ["Win32_Networking_WinSock"] }

[dev-dependencies]
byteorder = "1.5"
tracing-test = { version = "*", features = ["no-env-filter"] }
tokio-test = "*"
tokio-util = { version = "*", features = ["io"]}
mockall = "*"
env_logger = "0.10"

[package.metadata.docs.rs]
features = [
    "full",
    "local-http-rustls",
    "local-dns",
    "dns-over-tls",
    "dns-over-https",
]
