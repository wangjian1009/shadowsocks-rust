[package]
name = "shadowsocks"
version = "1.15.2"
authors = ["Shadowsocks Contributors"]
description = "shadowsocks is a fast tunnel proxy that helps you bypass firewalls."
repository = "https://github.com/shadowsocks/shadowsocks-rust"
readme = "README.md"
documentation = "https://docs.rs/shadowsocks-core"
keywords = ["shadowsocks", "proxy", "socks", "socks5", "firewall"]
license = "MIT"
edition = "2021"

[badges]
maintenance = { status = "passively-maintained" }

[features]
default = [
    "trust-dns",
    "flow-stat",
    "rate-limit",
    "transport-ws",
    # "transport-restls",
    "transport-tls",
    "transport-mkcp",
    "transport-skcp",
    "trojan",
    "vless",
    "wireguard",
    "aead-cipher-2022",
]

# Uses trust-dns instead of tokio's builtin DNS resolver
trust-dns = ["trust-dns-resolver", "arc-swap", "notify"]

# Enable Stream Cipher Protocol
# WARN: Stream Cipher Protocol is proved to be insecure
# https://github.com/shadowsocks/shadowsocks-rust/issues/373
# Users should always avoid using these ciphers in practice
stream-cipher = ["shadowsocks-crypto/v1-stream"]

# Enable extra AEAD ciphers
# WARN: These non-standard AEAD ciphers are not officially supported by shadowsocks community
aead-cipher-extra = ["shadowsocks-crypto/v1-aead-extra"]

# Enable AEAD 2022
aead-cipher-2022 = ["shadowsocks-crypto/v2", "rand/small_rng", "aes", "lru_time_cache"]
# Enable AEAD 2022 with extra ciphers
aead-cipher-2022-extra = ["aead-cipher-2022", "shadowsocks-crypto/v2-extra"]

# Enable detection against replay attack
security-replay-attack-detect = ["bloomfilter"]

transport = []
transport-ws = ["transport", "tokio-tungstenite"]
transport-tls = ["transport", "tokio-rustls", "webpki", "rustls-native-certs", "rustls-pemfile"]
transport-mkcp = ["transport", "arc-swap", "rand"]
transport-skcp = ["transport"]
transport-restls = ["anyhow", "tokio-util", "hmac", "sha1"]
flow-stat = []
statistics = ["metrics"]

trojan = ["rand"]
vless = ["rand", "hex"]
tuic = ["byteorder", "quinn", "parking_lot", "crossbeam-utils", "rustls", "rustls-native-certs", "rustls-pemfile"]
wireguard = ["byteorder", "dashmap", "parking_lot", "digest", "generic-array", "hex", "aead", "arraydeque", "blake2",
             "chacha20poly1305", "clear_on_drop", "crossbeam-channel", "hjul", "rand", "ring", "zerocopy",
             "x25519-dalek", "subtle", "treebitmap", "hmac", "rustls", "tun"]

rate-limit = ["governor", "nonzero_ext", "futures-timer", "quanta", "lazy_static", "regex"]

[dependencies]
tracing = "0.1.35"
metrics = { version = "0.20", optional = true }

libc = "0.2.94"
bytes = "1.2"
cfg-if = "1"
byte_string = "1.0"
base64 = "0.21"
url = "2.2"
once_cell = "1.17"
spin = { version = "0.9", features = ["std"] }
pin-project = "1.0"
bloomfilter = { version = "1.0.8", optional = true }
thiserror = "1.0"
rand = { version = "0.8", optional = true }
lru_time_cache = { version = "0.11", optional = true }

aead = { version = "^0.3", optional = true }
arraydeque = { version = "0.4.5", optional = true }
blake2 = { version = "^0.9", optional = true }
chacha20poly1305 = { version = "^0.7", optional = true }
clear_on_drop = { version = "0.2.3", optional = true }
crossbeam-channel = { version = "^0.5", optional = true }
dashmap = { version = "^4.0", optional = true }
digest = { version = "^0.9", optional = true }
generic-array = { version = "^0.14", optional = true }
hjul = { version = "0.2.2", optional = true }
ring = { version = "0.16", optional = true }
zerocopy = { version = "0.3", optional = true }
x25519-dalek = { path = "../../depends/x25519-dalek" , optional = true }
subtle = { version = "^2.4", optional = true }
treebitmap = { package = "ip_network_table-deps-treebitmap", version = "0.5.0", optional = true }

hex = { version = "0.4.3", optional = true }

serde = { version = "1.0", features = ["derive"] }
serde_urlencoded = "0.7"
serde_json = "1.0"
percent-encoding = "2.1"

futures = "0.3"
futures-core = "0.3"
futures-util = { version = "0.3", default-features = false }
async-trait = "0.1"

socket2 = { version = "0.4", features = ["all"] }
tokio = { version = "1.9.0", features = ["io-util", "macros", "net", "parking_lot", "process", "rt", "sync", "time", "tracing"] }
tokio-tfo = "0.2.0"
tokio-tungstenite = { version = "0.14", optional = true }
tokio-rustls = { version = "0.23.4", optional = true }
tokio-util = { version = "*", features = ["codec"], optional = true}
webpki = { version = "0.22", optional = true }
anyhow = { version = "1.0.68", optional = true }
hmac = { version = "^0.10", optional = true }
sha1 = { version = "^0.10.5", optional = true }

governor = { version = "0.3.2", optional = true }
nonzero_ext = { version = "0.2", optional = true }
futures-timer = { version = "3.0.2", optional = true }
quanta = { version = "0.4.1", optional = true }
lazy_static = { version = "1", optional = true }
regex = { version = "1.4", optional = true }

trust-dns-resolver = { version = "0.22", optional = true }
arc-swap = { version = "1.6", optional = true }
notify = { version = "5.1.0", optional = true }

aes = { version = "0.8", optional = true }
blake3 = "1.3"

byteorder = { version = "1.4", optional = true }
crossbeam-utils = { version = "0.8", default-features = false, optional = true }
parking_lot = { version = "0.12", optional = true }
quinn = { version = "0.8", optional = true }
rustls = { version = "0.20", features = ["quic", "dangerous_configuration"], default-features = false, optional = true }
rustls-native-certs = { version = "0.6", optional = true }
rustls-pemfile = { version = "1.0", optional = true }
tun = { version = "0.5.3", optional = true, features = ["async"] }
# chrono = "*"

sha2 = { version = "0.9"}
aes-gcm = { version = "0.9.4"}

[target.'cfg(any(target_arch = "x86_64", target_arch = "aarch64"))'.dependencies]
shadowsocks-crypto = { version = "0.5.1", features = ["ring"] }

[target.'cfg(not(any(target_arch = "x86_64", target_arch = "aarch64")))'.dependencies]
shadowsocks-crypto = { version = "0.5.1", features = [] }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.45", features = ["Win32_Foundation", "Win32_NetworkManagement_IpHelper", "Win32_Networking_WinSock", "Win32_System_IO"] }

[target.'cfg(unix)'.dependencies]
sendfd = { version = "0.4", features = ["tokio"] }

[dev-dependencies]
tracing-test = "*"
scopeguard = "1.1.0"
assert_matches = "1.5.0"
mockall = "*"
pnet = "^0.27"
proptest = "^0.10"
rand_chacha = "^0.3"
