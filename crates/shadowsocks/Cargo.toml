[package]
name = "shadowsocks"
version = "1.14.0"
authors = ["Shadowsocks Contributors"]
description = "shadowsocks is a fast tunnel proxy that helps you bypass firewalls."
repository = "https://github.com/shadowsocks/shadowsocks-rust"
readme = "README.md"
documentation = "https://docs.rs/shadowsocks-core"
keywords = ["shadowsocks", "proxy", "socks", "socks5", "firewall"]
license = "MIT"
edition = "2021"

[badges]
maintenance = { status = "passively-maintained" }

[features]
default = [
    "trust-dns",
    "rate-limit",
    "transport-ws",
    "transport-tls",
    "transport-mkcp",
    "trojan",
    "vless",
]

# Uses trust-dns instead of tokio's builtin DNS resolver
trust-dns = ["trust-dns-resolver", "arc-swap", "notify"]

# Enable Stream Cipher Protocol
# WARN: Stream Cipher Protocol is proved to be insecure
# https://github.com/shadowsocks/shadowsocks-rust/issues/373
# Users should always avoid using these ciphers in practice
stream-cipher = ["shadowsocks-crypto/v1-stream"]

# Enable extra AEAD ciphers
# WARN: These non-standard AEAD ciphers are not officially supported by shadowsocks community
aead-cipher-extra = ["shadowsocks-crypto/v1-aead-extra"]

# Enable detection against replay attack
security-replay-attack-detect = ["bloomfilter", "spin"]
# Enable IV printable prefix
security-iv-printable-prefix = ["rand"]

# Enable ARMv8 related optimizations
armv8 = ["shadowsocks-crypto/armv8"]
# Enable NEON releated optimizations
neon = ["shadowsocks-crypto/neon"]

transport = []
transport-ws = ["transport", "tokio-tungstenite"]
transport-tls = ["transport", "tokio-rustls", "webpki"]
transport-mkcp = ["transport", "spin", "arc-swap", "sha2", "aes-gcm", "rand"]

trojan = ["sha2", "rand"]
vless = ["rand", "hex", "spin"]

rate-limit = ["governor", "nonzero_ext", "futures-timer", "quanta", "lazy_static", "regex"]

[dependencies]
log = "0.4"

libc = "0.2.94"
bytes = "1.0"
cfg-if = "1"
byte_string = "1.0"
base64 = "0.13"
rand = { version = "0.8", optional = true }
url = "2.2"
once_cell = "1.8"
spin = { version = "0.9", features = ["std"], optional = true }
pin-project = "1.0"
bloomfilter = { version = "1.0.8", optional = true }
thiserror = "1.0"

hex = { version = "0.4.3", optional = true }

serde = { version = "1.0", features = ["derive"] }
serde_urlencoded = "0.7"
serde_json = "1.0"

futures = "0.3"
futures-core = "0.3"
futures-util = { version = "0.3", default-features = false }
async-trait = "0.1"

socket2 = { version = "0.4", features = ["all"] }
tokio = { version = "1.9.0", features = ["io-util", "macros", "net", "parking_lot", "process", "rt", "sync", "time"] }
tokio-tfo = "0.1.8"
tokio-tungstenite = { version = "0.14", optional = true }
tokio-rustls = { version = "0.22", optional = true, features = ["dangerous_configuration"] }
webpki = { version = "0.21", optional = true }

governor = { version = "0.3.2", optional = true }
nonzero_ext = { version = "0.2", optional = true }
futures-timer = { version = "3.0.2", optional = true }
quanta = { version = "0.4.1", optional = true }
lazy_static = { version = "1", optional = true }
regex = { version = "1.4", optional = true }

trust-dns-resolver = { version = "0.21", optional = true }
arc-swap = { version = "1.3", optional = true }
notify = { version = "5.0.0-pre.13", optional = true }

sha2 = { version = "0.9", optional = true }
aes-gcm = { version = "0.9.4", optional = true }

[target.'cfg(any(target_arch = "x86_64", target_arch = "aarch64"))'.dependencies]
shadowsocks-crypto = { version = "0.3.3", features = ["ring"] }

[target.'cfg(not(any(target_arch = "x86_64", target_arch = "aarch64")))'.dependencies]
shadowsocks-crypto = { version = "0.3.3", features = [] }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["mswsock", "winsock2", "netioapi"] }

[target.'cfg(unix)'.dependencies]
sendfd = { version = "0.4", features = ["tokio"] }

# Just for the ioctl call macro
[target.'cfg(any(target_os = "linux", target_os = "android"))'.dependencies]
nix = "0.23"

[dev-dependencies]
env_logger = "0.9"
scopeguard = "1.1.0"
assert_matches = "1.5.0"
mockall = "*"
